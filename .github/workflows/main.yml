permissions: write-all # Equivalent to default permissions plus id-token: write
name: main
on:
  schedule:
    - cron: '0 7 * * *'
  push:
    branches:
      - main
    paths-ignore:
      - CHANGELOG.md
    tags-ignore:
      - v*
      - '**'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  LOCAL_PLAT: linux-amd64
  IS_PRERELEASE: true
  ESC_ACTION_OIDC_AUTH: true
  ESC_ACTION_OIDC_ORGANIZATION: pulumi
  ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:organization
  ESC_ACTION_ENVIRONMENT: imports/github-secrets
  ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: NODE_AUTH_TOKEN=NPM_TOKEN,NPM_TOKEN,SLACK_WEBHOOK_URL
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org
          cache: yarn
          cache-dependency-path: '**/package.json'
      - name: Install deps
        run: npm ci
      - name: Lint code
        run: make lint
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
  acceptance-test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Install deps
        run: npm ci
      - name: Build dist
        run: make dist
      - name: Build Tarball
        run: npm pack
      - name: Rename tarball
        run: mv pulumi-eslint-plugin-$(jq -r .version < package.json).tgz pulumi-eslint-plugin.tgz
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-eslint-plugin.tgz
          path: ${{ github.workspace }}/pulumi-eslint-plugin.tgz
      - name: Run tests
        # Tell make to not rebuild the provider bin
        run: make test
    strategy:
      fail-fast: false
      matrix:
        nodeversion:
          - 16.x
  publish:
    name: publish
    needs: acceptance-test
    runs-on: ubuntu-latest
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          always-auth: true
          registry-url: https://registry.npmjs.org
          node-version: ${{matrix.nodeversion}}
      - name: Download Plugin
        uses: actions/download-artifact@v2
        with:
          name: pulumi-eslint-plugin.tgz
          path: ${{ github.workspace }}
      - name: Rename plugin tarball
        run: mv pulumi-eslint-plugin.tgz pulumi-eslint-plugin-$(jq -r .version < package.json).tgz
      - env:
          NODE_AUTH_TOKEN: ${{ steps.esc-secrets.outputs.NPM_TOKEN }}
        name: Publish Plugin
        run: ./scripts/publish_plugin.sh
    strategy:
      fail-fast: false
      matrix:
        nodeversion:
          - 16.x
